function run(V){V=V.split("");for(var W,l=V.length,R=Math.floor(l/2)-1,U=0;R>=U;U++)W=V[l-U-1],V[l-U-1]=V[U],V[U]=W;return V.join("")}var string="=";eval(atob(atob(run(string))));
